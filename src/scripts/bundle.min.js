webpackJsonp([0],{

/***/ 11:
/***/ (function(module, exports) {

eval("module.exports = {\n    attributeLookup: [{ \"Station number\": \"STAID\", \"Local identifier\": \"LOCAL\", \"Date\": \"DATES\", \"time\": \"TIMES\", \"Medium code\": \"MEDIM\", \"Sample type code\": \"STYPE\", \"Record number\": \"SAMPL\", \"Laboratory number\": \"LABNO\", \"Hydrologic unit code\": \"HUNIT\", \"Geologic unit code\": \"GUNIT\", \"Project code\": \"PRJCT\", \"Latitude - dec. deg.\": \"LATDD\", \"Longitude - dec. deg\": \"LNGDD\", \"County code\": \"CNTYC\", \"Sample date-time\": \"DATTM\", \"Geologic era name\": \"GUERA\", \"Geologic unit name\": \"GUNNM\", \"Geologic series name\": \"GUSER\", \"Geologic system name\": \"GUSYS\", \"Horizontal datum\": \"HDATM\", \"Elev, ft above datum\": \"SALTD\", \"Station name\": \"SNAME\", \"Altitude datum code\": \"VDATM\", \"Major River Basin\": \"MAJRIVBAS\", \"Well Use\": \"WELLUSE\", \"Well Completed In\": \"WELLCOMPIN\" }],\n\n    constituentGroupList: [{ \"constituentGroup\": \"Site Information\", \"pCodes\": [{ \"P72008\": \"Depth of well, feet below land surface datum\" }, { \"P84148\": \"Land use, predominant, fraction of total within 1/4 mile radius of well, code\" }, { \"P84147\": \"Land use, predominant, within 1/4 mile radius of well, code\" }, { \"P84146\": \"Land use, predominant, within 100 feet of well, code\" }] }, { \"constituentGroup\": \"Sampling Information\", \"pCodes\": [{ \"P72004\": \"Pump or flow period prior to sampling, minutes\" }, { \"P84143\": \"Well purging condition, code\" }] }, { \"constituentGroup\": \"Physical Parameters\", \"pCodes\": [{ \"P70300\": \"Dissolved solids dried at 180 degrees Celsius, water, filtered, milligrams per liter\" }, { \"P00900\": \"Hardness, water, milligrams per liter as calcium carbonate\" }, { \"P00905\": \"Noncarbonate hardness, water, filtered, lab, milligrams per liter as calcium carbonate\" }] }, { \"constituentGroup\": \"Dissolved Gases\", \"pCodes\": [{ \"P00405\": \"Carbon dioxide, water, unfiltered, milligrams per liter\" }, { \"P00597\": \"Dinitrogen, water, unfiltered, milligrams per liter\" }, { \"P82043\": \"Argon, water, dissolved, milligrams per liter\" }, { \"P85574\": \"Methane, water, dissolved, recoverable, milligrams per liter\" }] }, { \"constituentGroup\": \"Nutrients\", \"pCodes\": [{ \"P00623\": \"Ammonia plus organic nitrogen, water, filtered, milligrams per liter as nitrogen\" }, { \"P71846\": \"Ammonia, water, filtered, milligrams per liter as NH4\" }, { \"P00608\": \"Ammonia, water, filtered, milligrams per liter as nitrogen\" }, { \"P00631\": \"Nitrate plus nitrite, water, filtered, milligrams per liter as nitrogen\" }, { \"P71851\": \"Nitrate, water, filtered, milligrams per liter as nitrate\" }, { \"P00618\": \"Nitrate, water, filtered, milligrams per liter as nitrogen\" }, { \"P71856\": \"Nitrite, water, filtered, milligrams per liter as nitrite\" }, { \"P00613\": \"Nitrite, water, filtered, milligrams per liter as nitrogen\" }, { \"P00607\": \"Organic nitrogen, water, filtered, milligrams per liter as nitrogen\" }, { \"P00671\": \"Orthophosphate, water, filtered, milligrams per liter as phosphorus\" }, { \"P00660\": \"Orthophosphate, water, filtered, milligrams per liter as PO4\" }, { \"P00665\": \"# P00665 Phosphorus, water, unfiltered, milligrams per liter as phosphorus\" }, { \"P00602\": \"Total nitrogen [nitrate + nitrite + ammonia + organic-N], water, filtered, milligrams per liter\" }, { \"P00600\": \"Total nitrogen [nitrate + nitrite + ammonia + organic-N], water, unfiltered, milligrams per liter\" }] }, { \"constituentGroup\": \"Major Ions\", \"pCodes\": [{ \"P00915\": \"Calcium, water, filtered, milligrams per liter\" }, { \"P00925\": \"Magnesium, water, filtered, milligrams per liter\" }, { \"P00935\": \"Potassium, water, filtered, milligrams per liter\" }, { \"P00930\": \"Sodium, water, filtered, milligrams per liter\" }, { \"P39086\": \"Alkalinity, water, filtered, inflection-point titration method (incremental titration method), field, milligrams per liter as calcium carbonate\" }, { \"P00453\": \"Bicarbonate, water, filtered, inflection-point titration method (incremental titration method), field, milligrams per liter\" }, { \"P71870\": \"Bromide, water, filtered, milligrams per liter\" }, { \"P00452\": \"Carbonate, water, filtered, inflection-point titration method (incremental titration method), field, milligrams per liter\" }, { \"P00940\": \"Chloride, water, filtered, milligrams per liter\" }, { \"P00950\": \"Fluoride, water, filtered, milligrams per liter\" }, { \"P71875\": \"Hydrogen sulfide, water, unfiltered, milligrams per liter\" }, { \"P71834\": \"Hydroxide, water, filtered, inflection-point titration method (incremental titration method), field, milligrams per liter\" }, { \"P00955\": \"Silica, water, filtered, milligrams per liter as SiO2\" }, { \"P00945\": \"Sulfate, water, filtered, milligrams per liter\" }] }, { \"constituentGroup\": \"Trace Elements\", \"pCodes\": [{ \"P01106\": \"Aluminum, water, filtered, micrograms per liter\" }, { \"P01105\": \"Aluminum, water, unfiltered, recoverable, micrograms per liter\" }, { \"P01005\": \"Barium, water, filtered, micrograms per liter\" }, { \"P01007\": \"Barium, water, unfiltered, recoverable, micrograms per liter\" }, { \"P01010\": \"Beryllium, water, filtered, micrograms per liter\" }, { \"P01012\": \"Beryllium, water, unfiltered, recoverable, micrograms per liter\" }, { \"P01025\": \"Cadmium, water, filtered, micrograms per liter\" }, { \"P01027\": \"Cadmium, water, unfiltered, micrograms per liter\" }, { \"P01030\": \"Chromium, water, filtered, micrograms per liter\" }, { \"P01034\": \"Chromium, water, unfiltered, recoverable, micrograms per liter\" }, { \"P01035\": \"Cobalt, water, filtered, micrograms per liter\" }, { \"P01037\": \"Cobalt, water, unfiltered, recoverable, micrograms per liter\" }, { \"P01040\": \"Copper, water, filtered, micrograms per liter\" }, { \"P01042\": \"Copper, water, unfiltered, recoverable, micrograms per liter\" }, { \"P01046\": \"Iron, water, filtered, micrograms per liter\" }, { \"P01045\": \"Iron, water, unfiltered, recoverable, micrograms per liter\" }, { \"P01049\": \"Lead, water, filtered, micrograms per liter\" }, { \"P01051\": \"Lead, water, unfiltered, recoverable, micrograms per liter\" }, { \"P01130\": \"Lithium, water, filtered, micrograms per liter\" }, { \"P01132\": \"Lithium, water, unfiltered, recoverable, micrograms per liter\" }, { \"P01056\": \"Manganese, water, filtered, micrograms per liter\" }, { \"P01055\": \"Manganese, water, unfiltered, recoverable, micrograms per liter\" }, { \"P71890\": \"Mercury, water, filtered, micrograms per liter\" }, { \"P71900\": \"Mercury, water, unfiltered, recoverable, micrograms per liter\" }, { \"P01060\": \"Molybdenum, water, filtered, micrograms per liter\" }, { \"P01062\": \"Molybdenum, water, unfiltered, recoverable, micrograms per liter\" }, { \"P01065\": \"Nickel, water, filtered, micrograms per liter\" }, { \"P01067\": \"Nickel, water, unfiltered, recoverable, micrograms per liter\" }, { \"P01075\": \"Silver, water, filtered, micrograms per liter\" }, { \"P01077\": \"Silver, water, unfiltered, recoverable, micrograms per liter\" }, { \"P01080\": \"Strontium, water, filtered, micrograms per liter\" }, { \"P01082\": \"Strontium, water, unfiltered, recoverable, micrograms per liter\" }, { \"P01057\": \"Thallium, water, filtered, micrograms per liter\" }, { \"P01059\": \"Thallium, water, unfiltered, micrograms per liter\" }, { \"P01085\": \"Vanadium, water, filtered, micrograms per liter\" }, { \"P01090\": \"Zinc, water, filtered, micrograms per liter\" }, { \"P01092\": \"Zinc, water, unfiltered, recoverable, micrograms per liter\" }, { \"P01095\": \"Antimony, water, filtered, micrograms per liter\" }, { \"P01097\": \"Antimony, water, unfiltered, micrograms per liter\" }, { \"P01000\": \"Arsenic, water, filtered, micrograms per liter\" }, { \"P01002\": \"Arsenic, water, unfiltered, micrograms per liter\" }, { \"P01020\": \"Boron, water, filtered, micrograms per liter\" }, { \"P01145\": \"Selenium, water, filtered, micrograms per liter\" }, { \"P01147\": \"Selenium, water, unfiltered, micrograms per liter\" }] }, { \"constituentGroup\": \"Pesticides\", \"pCodes\": [{ \"P32103\": \"1,2-Dichloroethane, water, unfiltered, recoverable, micrograms per liter\" }, { \"P34541\": \"1,2-Dichloropropane, water, unfiltered, recoverable, micrograms per liter\" }, { \"P34571\": \"1,4-Dichlorobenzene, water, unfiltered, recoverable, micrograms per liter\" }, { \"P50470\": \"2,4-D methyl ester, water, filtered, recoverable, micrograms per liter\" }, { \"P39732\": \"2,4-D, water, filtered, recoverable, micrograms per liter\" }, { \"P38746\": \"2,4-DB, water, filtered (0.7 micron glass fiber filter), recoverable, micrograms per liter\" }, { \"P82660\": \"2,6-Diethylaniline, water, filtered (0.7 micron glass fiber filter), recoverable, micrograms per liter\" }, { \"P62850\": \"2-[(2-Ethyl-6-methylphenyl)amino]-2-oxoethanesulfonic acid, water, filtered, recoverable, micrograms per liter\" }, { \"P04040\": \"2-Chloro-4-isopropylamino-6-amino-s-triazine, water, filtered, recoverable, micrograms per liter\" }, { \"P04038\": \"2-Chloro-6-ethylamino-4-amino-s-triazine, water, filtered, recoverable, micrograms per liter\" }, { \"P50355\": \"2-Hydroxy-4-isopropylamino-6-ethylamino-s-triazine, water, filtered, recoverable, micrograms per liter\" }, { \"P49308\": \"3-Hydroxy carbofuran, water, filtered (0.7 micron glass fiber filter), recoverable, micrograms per liter\" }, { \"P50295\": \"3-Ketocarbofuran, water, filtered, recoverable, micrograms per liter\" }, { \"P61030\": \"Acetochlor oxanilic acid, water, filtered (0.7 micron glass fiber filter), recoverable, micrograms per liter\" }, { \"P62847\": \"Acetochlor sulfinylacetic acid, water, filtered, recoverable, micrograms per liter\" }, { \"P61029\": \"Acetochlor sulfonic acid, water, filtered (0.7 micron glass fiber filter), recoverable, micrograms per liter\" }, { \"P49260\": \"Acetochlor, water, filtered, recoverable, micrograms per liter\" }, { \"P49315\": \"Acifluorfen, water, filtered (0.7 micron glass fiber filter), recoverable, micrograms per liter\" }, { \"P61031\": \"Alachlor oxanilic acid, water, filtered (0.7 micron glass fiber filter), recoverable, micrograms per liter\" }, { \"P62848\": \"Alachlor sulfinylacetic acid, water, filtered, recoverable, micrograms per liter\" }, { \"P50009\": \"Alachlor sulfonic acid, water, filtered (0.7 micron glass fiber filter), recoverable, micrograms per liter\" }, { \"P46342\": \"Alachlor, water, filtered, recoverable, micrograms per liter\" }, { \"P49313\": \"Aldicarb sulfone, water, filtered (0.7 micron glass fiber filter), recoverable, micrograms per liter\" }, { \"P49314\": \"Aldicarb sulfoxide, water, filtered (0.7 micron glass fiber filter), recoverable, micrograms per liter\" }, { \"P49312\": \"Aldicarb, water, filtered (0.7 micron glass fiber filter), recoverable, micrograms per liter\" }, { \"P34253\": \"alpha-HCH, water, filtered, recoverable, micrograms per liter\" }, { \"P39632\": \"Atrazine, water, filtered, recoverable, micrograms per liter\" }, { \"P65065\": \"Atrazine, water, filtered, recoverable, nanograms per liter\" }, { \"P82686\": \"Azinphos-methyl, water, filtered (0.7 micron glass fiber filter), recoverable, micrograms per liter\" }, { \"P50299\": \"Bendiocarb, water, filtered, recoverable, micrograms per liter\" }, { \"P82673\": \"Benfluralin, water, filtered (0.7 micron glass fiber filter), recoverable, micrograms per liter\" }, { \"P50300\": \"Benomyl, water, filtered, recoverable, micrograms per liter\" }, { \"P61693\": \"Bensulfuron-methyl, water, filtered, recoverable, micrograms per liter\" }, { \"P38711\": \"Bentazon, water, filtered (0.7 micron glass fiber filter), recoverable, micrograms per liter\" }, { \"P04029\": \"Bromacil, water, filtered, recoverable, micrograms per liter\" }, { \"P49311\": \"Bromoxynil, water, filtered (0.7 micron glass fiber filter), recoverable, micrograms per liter\" }, { \"P04028\": \"Butylate, water, filtered, recoverable, micrograms per liter\" }, { \"P82680\": \"Carbaryl, water, filtered (0.7 micron glass fiber filter), recoverable, micrograms per liter\" }, { \"P82674\": \"Carbofuran, water, filtered (0.7 micron glass fiber filter), recoverable, micrograms per liter\" }, { \"P61188\": \"Chloramben methyl ester, water, filtered, recoverable, micrograms per liter\" }, { \"P50306\": \"Chlorimuron-ethyl, water, filtered, recoverable, micrograms per liter\" }, { \"P04039\": \"Chlorodiamino-s-triazine, water, filtered, recoverable, micrograms per liter\" }, { \"P49306\": \"Chlorothalonil, water, filtered (0.7 micron glass fiber filter), recoverable, micrograms per liter\" }, { \"P38933\": \"Chlorpyrifos, water, filtered, recoverable, micrograms per liter\" }, { \"P82687\": \"cis-Permethrin, water, filtered (0.7 micron glass fiber filter), recoverable, micrograms per liter\" }, { \"P49305\": \"Clopyralid, water, filtered (0.7 micron glass fiber filter), recoverable, micrograms per liter\" }, { \"P04041\": \"Cyanazine, water, filtered, recoverable, micrograms per liter\" }, { \"P04031\": \"Cycloate, water, filtered, recoverable, micrograms per liter\" }, { \"P49304\": \"DCPA monoacid, water, filtered (0.7 micron glass fiber filter), recoverable, micrograms per liter\" }, { \"P82682\": \"DCPA, water, filtered (0.7 micron glass fiber filter), recoverable, micrograms per liter\" }, { \"P63778\": \"Dechloroacetochlor, water, filtered, recoverable, micrograms per liter\" }, { \"P63777\": \"Dechloroalachlor, water, filtered, recoverable, micrograms per liter\" }, { \"P63779\": \"Dechlorodimethenamid, water, filtered, recoverable, micrograms per liter\" }, { \"P63780\": \"Dechlorometolachlor, water, filtered, recoverable, micrograms per liter\" }, { \"P62169\": \"Desulfinylfipronil amide, water, filtered, recoverable, micrograms per liter\" }, { \"P62170\": \"Desulfinylfipronil, water, filtered, recoverable, micrograms per liter\" }, { \"P39572\": \"Diazinon, water, filtered, recoverable, micrograms per liter\" }, { \"P38442\": \"Dicamba, water, filtered (0.7 micron glass fiber filter), recoverable, micrograms per liter\" }, { \"P49302\": \"Dichlorprop, water, filtered (0.7 micron glass fiber filter), recoverable, micrograms per liter\" }, { \"P39381\": \"Dieldrin, water, filtered, recoverable, micrograms per liter\" }, { \"P62482\": \"Dimethenamid oxanilic acid, water, filtered, recoverable, micrograms per liter\" }, { \"P61951\": \"Dimethenamid sulfonic acid, water, filtered, recoverable, micrograms per liter\" }, { \"P61588\": \"Dimethenamid, water, filtered, recoverable, micrograms per liter\" }, { \"P49301\": \"Dinoseb, water, filtered (0.7 micron glass fiber filter), recoverable, micrograms per liter\" }, { \"P04033\": \"Diphenamid, water, filtered, recoverable, micrograms per liter\" }, { \"P82677\": \"Disulfoton, water, filtered (0.7 micron glass fiber filter), recoverable, micrograms per liter\" }, { \"P49300\": \"Diuron, water, filtered (0.7 micron glass fiber filter), recoverable, micrograms per liter\" }, { \"P82668\": \"EPTC, water, filtered (0.7 micron glass fiber filter), recoverable, micrograms per liter\" }, { \"P82663\": \"Ethalfluralin, water, filtered (0.7 micron glass fiber filter), recoverable, micrograms per liter\" }, { \"P82672\": \"Ethoprop, water, filtered (0.7 micron glass fiber filter), recoverable, micrograms per liter\" }, { \"P49297\": \"Fenuron, water, filtered (0.7 micron glass fiber filter), recoverable, micrograms per liter\" }, { \"P62167\": \"Fipronil sulfide, water, filtered, recoverable, micrograms per liter\" }, { \"P62168\": \"Fipronil sulfone, water, filtered, recoverable, micrograms per liter\" }, { \"P62166\": \"Fipronil, water, filtered, recoverable, micrograms per liter\" }, { \"P62483\": \"Flufenacet oxanilic acid, water, filtered, recoverable, micrograms per liter\" }, { \"P61952\": \"Flufenacet sulfonic acid, water, filtered, recoverable, micrograms per liter\" }, { \"P62481\": \"Flufenacet, water, filtered, recoverable, micrograms per liter\" }, { \"P61694\": \"Flumetsulam, water, filtered, recoverable, micrograms per liter\" }, { \"P38811\": \"Fluometuron, water, filtered (0.7 micron glass fiber filter), recoverable, micrograms per liter\" }, { \"P04095\": \"Fonofos, water, filtered, recoverable, micrograms per liter\" }, { \"P63784\": \"Hydroxyacetochlor, water, filtered, recoverable, micrograms per liter\" }, { \"P63783\": \"Hydroxyalachlor, water, filtered, recoverable, micrograms per liter\" }, { \"P64045\": \"Hydroxydimethenamid, water, filtered, recoverable, micrograms per liter\" }, { \"P63785\": \"Hydroxymetolachlor, water, filtered, recoverable, micrograms per liter\" }, { \"P50356\": \"Imazaquin, water, filtered, recoverable, micrograms per liter\" }, { \"P50407\": \"Imazethapyr, water, filtered, recoverable, micrograms per liter\" }, { \"P61695\": \"Imidacloprid, water, filtered, recoverable, micrograms per liter\" }, { \"P39341\": \"Lindane, water, filtered, recoverable, micrograms per liter\" }, { \"P82666\": \"Linuron, water, filtered (0.7 micron glass fiber filter), recoverable, micrograms per liter\" }, { \"P39532\": \"Malathion, water, filtered, recoverable, micrograms per liter\" }, { \"P38482\": \"MCPA, water, filtered (0.7 micron glass fiber filter), recoverable, micrograms per liter\" }, { \"P38487\": \"MCPB, water, filtered (0.7 micron glass fiber filter), recoverable, micrograms per liter\" }, { \"P50359\": \"Metalaxyl, water, filtered, recoverable, micrograms per liter\" }, { \"P38501\": \"Methiocarb, water, filtered (0.7 micron glass fiber filter), recoverable, micrograms per liter\" }, { \"P49296\": \"Methomyl, water, filtered (0.7 micron glass fiber filter), recoverable, micrograms per liter\" }, { \"P82667\": \"Methyl parathion, water, filtered (0.7 micron glass fiber filter), recoverable, micrograms per liter\" }, { \"P61044\": \"Metolachlor oxanilic acid, water, filtered (0.7 micron glass fiber filter), recoverable, micrograms per liter\" }, { \"P61043\": \"Metolachlor sulfonic acid, water, filtered (0.7 micron glass fiber filter), recoverable, micrograms per liter\" }, { \"P39415\": \"Metolachlor, water, filtered, recoverable, micrograms per liter\" }, { \"P82630\": \"Metribuzin, water, filtered, recoverable, micrograms per liter\" }, { \"P61697\": \"Metsulfuron-methyl, water, filtered, recoverable, micrograms per liter\" }, { \"P82671\": \"Molinate, water, filtered (0.7 micron glass fiber filter), recoverable, micrograms per liter\" }, { \"P61692\": \"N-(4-Chlorophenyl)-N'-methylurea, water, filtered, recoverable, micrograms per liter\" }, { \"P82684\": \"Napropamide, water, filtered (0.7 micron glass fiber filter), recoverable, micrograms per liter\" }, { \"P49294\": \"Neburon, water, filtered (0.7 micron glass fiber filter), recoverable, micrograms per liter\" }, { \"P50364\": \"Nicosulfuron, water, filtered, recoverable, micrograms per liter\" }, { \"P49293\": \"Norflurazon, water, filtered (0.7 micron glass fiber filter), recoverable, micrograms per liter\" }, { \"P49292\": \"Oryzalin, water, filtered (0.7 micron glass fiber filter), recoverable, micrograms per liter\" }, { \"P38866\": \"Oxamyl, water, filtered (0.7 micron glass fiber filter), recoverable, micrograms per liter\" }, { \"P34653\": \"p,p'-DDE, water, filtered, recoverable, micrograms per liter\" }, { \"P39542\": \"Parathion, water, filtered, recoverable, micrograms per liter\" }, { \"P82669\": \"Pebulate, water, filtered (0.7 micron glass fiber filter), recoverable, micrograms per liter\" }, { \"P82683\": \"Pendimethalin, water, filtered (0.7 micron glass fiber filter), recoverable, micrograms per liter\" }, { \"P82664\": \"Phorate, water, filtered (0.7 micron glass fiber filter), recoverable, micrograms per liter\" }, { \"P49291\": \"Picloram, water, filtered (0.7 micron glass fiber filter), recoverable, micrograms per liter\" }, { \"P04037\": \"Prometon, water, filtered, recoverable, micrograms per liter\" }, { \"P62767\": \"Propachlor oxanilic acid, water, filtered (0.7 micron glass fiber filter), recoverable, micrograms per liter\" }, { \"P62766\": \"Propachlor sulfonic acid, water, filtered (0.7 micron glass fiber filter), recoverable, micrograms per liter\" }, { \"P04024\": \"Propachlor, water, filtered, recoverable, micrograms per liter\" }, { \"P82679\": \"Propanil, water, filtered (0.7 micron glass fiber filter), recoverable, micrograms per liter\" }, { \"P82685\": \"Propargite, water, filtered (0.7 micron glass fiber filter), recoverable, micrograms per liter\" }, { \"P51195\": \"Propene, water, dissolved, mole percent of dissolved gases\" }, { \"P49236\": \"Propham, water, filtered (0.7 micron glass fiber filter), recoverable, micrograms per liter\" }, { \"P50471\": \"Propiconazole, water, filtered, recoverable, micrograms per liter\" }, { \"P38538\": \"Propoxur, water, filtered (0.7 micron glass fiber filter), recoverable, micrograms per liter\" }, { \"P82676\": \"Propyzamide, water, filtered (0.7 micron glass fiber filter), recoverable, micrograms per liter\" }, { \"P62849\": \"sec-Alachlor sulfonic acid, water, filtered, recoverable, micrograms per liter\" }, { \"P38548\": \"Siduron, water, filtered, recoverable, micrograms per liter\" }, { \"P04035\": \"Simazine, water, filtered, recoverable, micrograms per liter\" }, { \"P50337\": \"Sulfometuron-methyl, water, filtered, recoverable, micrograms per liter\" }, { \"P82670\": \"Tebuthiuron, water, filtered (0.7 micron glass fiber filter), recoverable, micrograms per liter\" }, { \"P82665\": \"Terbacil, water, filtered (0.7 micron glass fiber filter), recoverable, micrograms per liter\" }, { \"P04032\": \"Terbacil, water, filtered, recoverable, micrograms per liter\" }, { \"P82675\": \"Terbufos, water, filtered (0.7 micron glass fiber filter), recoverable, micrograms per liter\" }, { \"P82681\": \"Thiobencarb, water, filtered (0.7 micron glass fiber filter), recoverable, micrograms per liter\" }, { \"P82678\": \"Triallate, water, filtered (0.7 micron glass fiber filter), recoverable, micrograms per liter\" }, { \"P49235\": \"Triclopyr, water, filtered (0.7 micron glass fiber filter), recoverable, micrograms per liter\" }, { \"P82661\": \"Trifluralin, water, filtered (0.7 micron glass fiber filter), recoverable, micrograms per liter\" }] }, { \"constituentGroup\": \"Volatile Organic Compounds\", \"pCodes\": [{ \"P34506\": \"1,1,1-Trichloroethane, water, unfiltered, recoverable, micrograms per liter\" }, { \"P77652\": \"1,1,2-Trichloro-1,2,2-trifluoroethane, water, unfiltered, recoverable, micrograms per liter\" }, { \"P34496\": \"1,1-Dichloroethane, water, unfiltered, recoverable, micrograms per liter\" }, { \"P34501\": \"1,1-Dichloroethene, water, unfiltered, recoverable, micrograms per liter\" }, { \"P34536\": \"1,2-Dichlorobenzene, water, unfiltered, recoverable, micrograms per liter\" }, { \"P34566\": \"1,3-Dichlorobenzene, water, unfiltered, recoverable, micrograms per liter\" }, { \"P34030\": \"Benzene, water, unfiltered, recoverable, micrograms per liter\" }, { \"P32101\": \"Bromodichloromethane, water, unfiltered, recoverable, micrograms per liter\" }, { \"P34301\": \"Chlorobenzene, water, unfiltered, recoverable, micrograms per liter\" }, { \"P77093\": \"cis-1,2-Dichloroethene, water, unfiltered, recoverable, micrograms per liter\" }, { \"P32105\": \"Dibromochloromethane, water, unfiltered, recoverable, micrograms per liter\" }, { \"P34668\": \"Dichlorodifluoromethane, water, unfiltered, recoverable, micrograms per liter\" }, { \"P34423\": \"Dichloromethane, water, unfiltered, recoverable, micrograms per liter\" }, { \"P81576\": \"Diethyl ether, water, unfiltered, recoverable, micrograms per liter\" }, { \"P81577\": \"Diisopropyl ether, water, unfiltered, recoverable, micrograms per liter\" }, { \"P34371\": \"Ethylbenzene, water, unfiltered, recoverable, micrograms per liter\" }, { \"P78032\": \"Methyl tert-butyl ether, water, unfiltered, recoverable, micrograms per liter\" }, { \"P50005\": \"Methyl tert-pentyl ether, water, unfiltered, recoverable, micrograms per liter\" }, { \"P85795\": \"m-Xylene plus p-xylene, water, unfiltered, recoverable, micrograms per liter\" }, { \"P00680\": \"Organic carbon, water, unfiltered, milligrams per liter\" }, { \"P77135\": \"o-Xylene, water, unfiltered, recoverable, micrograms per liter\" }, { \"P32730\": \"Phenolic compounds, water, unfiltered, recoverable, micrograms per liter\" }, { \"P77128\": \"Styrene, water, unfiltered, recoverable, micrograms per liter\" }, { \"P50004\": \"tert-Butyl ethyl ether, water, unfiltered, recoverable, micrograms per liter\" }, { \"P34475\": \"Tetrachloroethene, water, unfiltered, recoverable, micrograms per liter\" }, { \"P32102\": \"Tetrachloromethane, water, unfiltered, recoverable, micrograms per liter\" }, { \"P34010\": \"Toluene, water, unfiltered, recoverable, micrograms per liter\" }, { \"P34546\": \"trans-1,2-Dichloroethene, water, unfiltered, recoverable, micrograms per liter\" }, { \"P32104\": \"Tribromomethane, water, unfiltered, recoverable, micrograms per liter\" }, { \"P39180\": \"Trichloroethene, water, unfiltered, recoverable, micrograms per liter\" }, { \"P34488\": \"Trichlorofluoromethane, water, unfiltered, recoverable, micrograms per liter\" }, { \"P32106\": \"Trichloromethane, water, unfiltered, recoverable, micrograms per liter\" }, { \"P90867\": \"Trihalomethanes, water, unfiltered, maximum summation, micrograms per liter\" }, { \"P90851\": \"Trihalomethanes, water, unfiltered, minimum summation, micrograms per liter\" }, { \"P39175\": \"Vinyl chloride, water, unfiltered, recoverable, micrograms per liter\" }] }, { \"constituentGroup\": \"Organics, other\", \"pCodes\": [{ \"P67440\": \"Caffeine, water, filtered (0.2 micron filter), recoverable, nanograms per liter\" }, { \"P50305\": \"Caffeine, water, filtered, recoverable, micrograms per liter\" }] }, { \"constituentGroup\": \"Radiochemicals\", \"pCodes\": [{ \"P01519\": \"Gross alpha radioactivity, water, unfiltered, picocuries per liter\" }, { \"P63018\": \"Gross alpha radioactivity, water, unfiltered, Th-230 curve, picocuries per liter\" }, { \"P03519\": \"Gross beta radioactivity, water, unfiltered, Cs-137 curve, picocuries per liter\" }, { \"P85817\": \"Gross beta radioactivity, water, unfiltered, picocuries per liter\" }, { \"P76002\": \"Radon-222 2-sigma combined uncertainty, water, unfiltered, picocuries per liter\" }, { \"P82303\": \"Radon-222, water, unfiltered, picocuries per liter\" }, { \"P75985\": \"Tritium 2-sigma combined uncertainty, water, unfiltered, picocuries per liter\" }, { \"P07000\": \"Tritium, water, unfiltered, picocuries per liter\" }, { \"P22703\": \"Uranium (natural), water, filtered, micrograms per liter\" }, { \"P28011\": \"Uranium (natural), water, unfiltered, micrograms per liter\" }] }, { \"constituentGroup\": \"Microbiological\", \"pCodes\": [{ \"P50468\": \"Escherichia coli, defined substrate test method (DSTM), water, most probable number per 100 milliliters\" }, { \"P99596\": \"Escherichia coli, defined substrate test presence or absence method (DSTM PA), water, presence or absence per 100 milliliters\" }, { \"P31684\": \"Escherichia coli, MUG method, water, presence or absence in sample\" }, { \"P31691\": \"Escherichia coli, water, colonies per 100 milliliters\" }, { \"P84385\": \"Escherichia coli, water, presence or absence in sample\" }, { \"P31616\": \"Fecal coliforms, M-FC MF (0.45 micron) method, water, colony forming units per 100 milliliters\" }, { \"P31625\": \"Fecal coliforms, M-FC MF (0.7 micron) method, water, colony forming units per 100 milliliters\" }, { \"P61215\": \"Fecal coliforms, water, colonies per 100 milliliters\" }, { \"P78943\": \"Heterotrophic bacteria, R2 agar method, water, colony forming units per milliliter\" }, { \"P31692\": \"Heterotrophic plate count, water, colony forming units per milliliter\" }, { \"P50569\": \"Total coliforms, defined substrate test method (DSTM), water, most probable number per 100 milliliters\" }, { \"P99595\": \"Total coliforms, defined substrate test presence or absence method (DSTM PA), water, presence or absence per 100 milliliters\" }, { \"P31501\": \"Total coliforms, M-Endo MF method, immediate, water, colony forming units per 100 milliliters\" }, { \"P61213\": \"Total coliforms, water, colonies per 100 milliliters\" }, { \"P84138\": \"Total coliforms, water, presence or absence\" }] }]\n};//# sourceMappingURL=data:application/json;charset=utf-8;base64,");

/***/ }),

/***/ 14:
/***/ (function(module, exports) {

eval("module.exports = \"<!DOCTYPE html>\\r\\n<html>\\r\\n  <head>\\r\\n    <meta name=\\\"author\\\" content=\\\"Martyn Smith - USGS NY WSC\\\">\\r\\n\\t<link rel=\\\"copyright\\\" href=\\\"license.txt\\\">\\r\\n    <title>NY WSC 305b Mapper</title>\\r\\n    <meta name=\\\"viewport\\\" content=\\\"width=device-width, initial-scale=1.0, maximum-scale=1.0, user-scalable=no\\\">\\r\\n    <script src=\\\"./scripts/vendor.bundle.min.js\\\"></script>\\r\\n    <script src=\\\"./scripts/bundle.min.js\\\"></script>  \\r\\n  </head>\\r\\n  <body>\\r\\n    <div id=\\\"top-menu\\\">\\r\\n        <div class=\\\"title\\\">\\r\\n            <a class='top-menu-brand' href=\\\"http://www.usgs.gov\\\"><img src=\\\"images/usgs-logo.png\\\"></a>\\r\\n            <span class=\\\"app-name\\\">NY WSC 305b Mapper</span> <span class=\\\"app-name-mobile\\\">NY WSC 305b Mapper</span> \\r\\n        </div>\\r\\n        <div id=\\\"mobile-main-menu\\\">\\r\\n            <span class=\\\"glyphicon glyphicon-menu-hamburger\\\" ></span>\\r\\n        </div>\\r\\n\\r\\n        <button id=\\\"aboutButton\\\" class=\\\"btn btn-default top-menu-btn pull-right\\\">\\r\\n            <i class=\\\"glyphicon glyphicon-info-sign\\\"></i><span class=\\\"hidden-xs\\\">&nbsp;&nbsp;About</span>\\r\\n        </button>\\r\\n    </div>\\r\\n\\r\\n    <div id=\\\"main-menu\\\">\\r\\n        <div class=\\\"main-menu-container scrollable\\\">\\r\\n            <div class=\\\"menu-content\\\"> \\r\\n                <div class=\\\"scrollable-content\\\">\\r\\n\\r\\n                    <div class=\\\"panel-group\\\" id=\\\"accordion\\\">\\r\\n\\r\\n                        <div class=\\\"panel panel-default sidebar-panel\\\">\\r\\n                            <div class=\\\"panel-heading\\\">\\r\\n                                <h4 class=\\\"panel-title\\\">\\r\\n                                    <a class=\\\"accordion-toggle\\\" data-toggle=\\\"collapse\\\" data-parent=\\\"#accordion\\\" href=\\\"#filtersPanel\\\">\\r\\n                                        Filters\\r\\n                                    </a>\\r\\n                                </h4>\\r\\n                            </div>\\r\\n                            <div id=\\\"filtersPanel\\\" class=\\\"panel-collapse collapse in\\\">\\r\\n                                <div class=\\\"panel-body collapse in\\\">     \\r\\n                                    <button type=\\\"button\\\" class=\\\"btn btn-success btn-block\\\" id=\\\"resetFilters\\\" >Reset Filters</button>\\r\\n\\r\\n                                    <h4 id=\\\"siteCount\\\" class=\\\"text-right\\\"></h4>\\r\\n       \\r\\n                                    <div id=\\\"geoFilterSelect\\\" class=\\\"filterSelect\\\">\\r\\n                                        </br><label>Site / Location Filters</label>\\r\\n                                    </div>\\r\\n\\r\\n                                    <div id=\\\"showConstituentFilterSelect\\\" class=\\\"btn-toolbar\\\" style=\\\"padding-top: 20px;\\\">\\r\\n                                        <button type=\\\"button\\\" class=\\\"btn btn-success btn-block\\\"  >Continue to Constituent Filters</button>\\r\\n                                    </div>\\r\\n\\r\\n                                    <div id=\\\"constituentFilterSelect\\\" class=\\\"filterSelect\\\" style=\\\"display:none;\\\">\\r\\n                                        </br><label>Constituent Group Filters</label>\\r\\n                                    </div>\\r\\n                                    \\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\r\\n                                </div>\\r\\n                            </div>\\r\\n                        </div>\\r\\n\\r\\n\\r\\n                        <div class=\\\"panel panel-default sidebar-panel\\\">\\r\\n                            <div class=\\\"panel-heading\\\">\\r\\n                                <h4 class=\\\"panel-title\\\">\\r\\n                                    <a class=\\\"accordion-toggle\\\" data-toggle=\\\"collapse\\\" data-parent=\\\"#accordion\\\" href=\\\"#exportPanel\\\">\\r\\n                                        Export\\r\\n                                    </a>\\r\\n                                </h4>\\r\\n                            </div>\\r\\n                            <div id=\\\"exportPanel\\\" class=\\\"panel-collapse collapse\\\">\\r\\n                                <div class=\\\"panel-body\\\">     \\r\\n                                    <div id=\\\"export\\\" style=\\\"display:block;\\\">\\r\\n   \\r\\n                                        <div class=\\\"form-group\\\">\\r\\n                                            <button type=\\\"button\\\" class=\\\"btn btn-success btn-block\\\" id=\\\"exportGeoJSON\\\" >Export GeoJSON&nbsp;&nbsp;<i class=\\\"glyphicon glyphicon-download-alt\\\"></i></button>\\r\\n                                        </div>\\r\\n                                       <div class=\\\"form-group\\\">\\r\\n                                            <button type=\\\"button\\\" class=\\\"btn btn-success btn-block\\\" id=\\\"exportKML\\\" >Export KML&nbsp;&nbsp;<i class=\\\"glyphicon glyphicon-download-alt\\\"></i></button>\\r\\n                                        </div>\\r\\n                                        <div class=\\\"form-group\\\">\\r\\n                                            <button type=\\\"button\\\" class=\\\"btn btn-success btn-block\\\" id=\\\"exportCSV\\\" >Export CSV&nbsp;&nbsp;<i class=\\\"glyphicon glyphicon-download-alt\\\"></i></button>\\r\\n                                        </div>\\r\\n                                    </div>\\r\\n                                </div>\\r\\n                            </div>\\r\\n                        </div>\\r\\n\\r\\n                        <div class=\\\"panel panel-default sidebar-panel\\\">\\r\\n                            <div class=\\\"panel-heading\\\">\\r\\n                                <h4 class=\\\"panel-title\\\">\\r\\n                                    <a class=\\\"accordion-toggle\\\" data-toggle=\\\"collapse\\\" data-parent=\\\"#accordion\\\" href=\\\"#mapLayersPanel\\\">\\r\\n                                        Map Layers\\r\\n                                    </a>\\r\\n                                </h4>\\r\\n                            </div>\\r\\n                            <div id=\\\"mapLayersPanel\\\" class=\\\"panel-collapse collapse\\\">\\r\\n                                <div class=\\\"panel-body\\\">\\r\\n                                    <div id=\\\"baseLayerToggles\\\" style=\\\"padding: 2px 2px;\\\"></div>\\r\\n                                </div>\\r\\n                            </div>\\r\\n                        </div>\\r\\n\\r\\n                        <div class=\\\"panel panel-default sidebar-panel\\\">\\r\\n                            <div class=\\\"panel-heading\\\">\\r\\n                                <h4 class=\\\"panel-title\\\">\\r\\n                                    <a class=\\\"accordion-toggle\\\" data-toggle=\\\"collapse\\\" data-parent=\\\"#accordion\\\" href=\\\"#basemapsPanel\\\">\\r\\n                                        Basemaps\\r\\n                                    </a>\\r\\n                                </h4>\\r\\n                            </div>\\r\\n                            <div id=\\\"basemapsPanel\\\" class=\\\"panel-collapse collapse\\\">\\r\\n                                <div class=\\\"panel-body\\\">\\r\\n                                    <button id=\\\"btnStreets\\\" class=\\\"btn btn-default slick-btn basemapBtn equalize\\\"><img class=\\\"basemapThumb\\\" alt=\\\"\\\" src=\\\"images/streets.jpg\\\"><br class=\\\"basemapThumb\\\">Streets</button>\\r\\n                                    <button id=\\\"btnSatellite\\\" class=\\\"btn btn-default slick-btn basemapBtn equalize\\\" ><img class=\\\"basemapThumb\\\" alt=\\\"\\\" src=\\\"images/satellite.jpg\\\"><br class=\\\"basemapThumb\\\">Satellite</button>\\r\\n                                    <button id=\\\"btnTopo\\\" class=\\\"btn btn-default slick-btn basemapBtn equalize\\\"><img class=\\\"basemapThumb\\\" alt=\\\"\\\" src=\\\"images/topo.jpg\\\"><br class=\\\"basemapThumb\\\">Topo</button>\\r\\n                                    <button id=\\\"btnTerrain\\\" class=\\\"btn btn-default slick-btn basemapBtn equalize\\\"><img class=\\\"basemapThumb\\\" alt=\\\"\\\" src=\\\"images/terrain.jpg\\\"><br class=\\\"basemapThumb\\\">Terrain</button>\\r\\n                                    <button id=\\\"btnGray\\\" class=\\\"btn btn-default slick-btn basemapBtn equalize slick-btn-selection\\\" ><img class=\\\"basemapThumb\\\" alt=\\\"\\\" src=\\\"images/gray.jpg\\\"><br class=\\\"basemapThumb\\\">Gray</button>\\r\\n                                    <button id=\\\"btnNatGeo\\\" class=\\\"btn btn-default slick-btn basemapBtn equalize\\\"><img class=\\\"basemapThumb\\\" alt=\\\"\\\" src=\\\"images/natgeo.jpg\\\"><br class=\\\"basemapThumb\\\">NatGeo</button>\\r\\n                                </div>\\r\\n                            </div>\\r\\n                        </div>\\r\\n                    </div>\\r\\n\\r\\n                    <div id=\\\"info\\\" class=\\\"identification pull-right\\\">Developed by USGS NY WSC</div>\\r\\n                </div>\\r\\n            </div>\\r\\n        </div>\\r\\n    </div>\\r\\n    \\r\\n\\r\\n    <div id=\\\"aboutModal\\\" class=\\\"modal fade\\\"  tabindex=\\\"-1\\\" role=\\\"dialog\\\" >\\r\\n        <div class=\\\"modal-dialog  modal-lg\\\">\\r\\n            <div class=\\\"modal-content\\\">\\r\\n                <div class=\\\"modal-header\\\">\\r\\n                    <button class=\\\"close\\\" type=\\\"button\\\" data-dismiss=\\\"modal\\\" aria-hidden=\\\"true\\\" style=\\\"color:gray;\\\">&times;</button>\\r\\n                    <h4 class=\\\"modal-title\\\">NY WSC 305b Mapper</h4>\\r\\n                </div>\\r\\n                <div id=\\\"aboutModalBody\\\" class=\\\"modal-body\\\">\\r\\n                    <ul class=\\\"nav nav-tabs\\\" id=\\\"aboutModalTabs\\\">\\r\\n                        <li role=\\\"presentation\\\" class=\\\"active\\\"><a id=\\\"aboutTab\\\" href=\\\"#aboutTabPane\\\" data-toggle=\\\"tab\\\"><i class=\\\"fa fa-question-circle\\\"></i>&nbsp;About the application</a></li>\\r\\n                        <li role=\\\"presentation\\\"><a id=\\\"disclaimerTab\\\" href=\\\"#disclaimerTabPane\\\" data-toggle=\\\"tab\\\"><i class=\\\"fa fa-exclamation-circle\\\"></i>&nbsp;Disclaimer</a></li>\\r\\n                    </ul>\\r\\n                    <div class=\\\"tab-content\\\">\\r\\n                        <div role=\\\"tabpanel\\\" class=\\\"tab-pane active\\\" id=\\\"aboutTabPane\\\"></br>\\r\\n                            <p>Developed by Martyn Smith of the NY WSC.  Licensed under <a href=\\\"./license.txt\\\" target=\\\"_blank\\\">Apache 2.0</a></p>\\r\\n                            <p>Portions of this application were developed in conjuction with <a href=\\\"http://wim.usgs.gov\\\" target=\\\"_blank\\\">Web Informatics and Mapping (WiM)</a></p>\\r\\n                            <span id=\\\"appVersion\\\"></span>\\r\\n                        </div>\\r\\n                        <div role=\\\"tabpanel\\\" class=\\\"tab-pane\\\" id=\\\"disclaimerTabPane\\\"></br>\\r\\n                            <div class=\\\"row\\\">\\r\\n                            </div>\\r\\n                        </div>\\r\\n                    </div>\\r\\n                </div>\\r\\n                <!--<div class=\\\"modal-footer\\\">\\r\\n                </div>-->\\r\\n            </div><!-- /.modal-content -->\\r\\n        </div> <!-- /.modal-dialog -->\\r\\n    </div><!-- /.modal -->\\r\\n\\r\\n    <div id=\\\"mapDiv\\\">\\r\\n        <div id=\\\"NWSlegend\\\"></div>\\r\\n        <div id=\\\"radarTimeStamp\\\" style=\\\"font-size:x-small;\\\"></div>\\r\\n    </div>\\r\\n  </body>\\r\\n</html>\"//# sourceMappingURL=data:application/json;charset=utf-8;base64,");

/***/ }),

/***/ 20:
/***/ (function(module, exports, __webpack_require__) {

eval("/* WEBPACK VAR INJECTION */(function(toastr, $, __webpack_provided_L_dot_esri, csv2geojson, tokml) {// ------------------------------------------------------------------------------\n// ----- NY QW Mapper ----------------------------------------------------------\n// ------------------------------------------------------------------------------\n\n// copyright:   2016 Martyn Smith - USGS NY WSC\n\n// authors:  Martyn J. Smith - USGS NY WSC\n\n// purpose:  Web Mapping interface for NY QW data\n\n// updates:\n// 12.02.2016 mjs - Created\n\n//config variables\nvar MapX = '-76.2';\nvar MapY = '42.7';\nvar map;\nvar masterGeoJSON, curGeoJSONlayer;\nvar sitesLayer; //leaflet feature group representing current filtered set of sites\nvar baseMapLayer, basemapLayerLabels;\nvar visibleLayers = [];\nvar identifiedFeature;\nvar filterSelections = [];\nvar popupItems = ['SNAME', 'STAID', 'MAJRIVBAS', 'WELLUSE', 'WELLCOMPIN', 'CNTY', 'GUNIT', 'HUNIT'];\nvar GeoFilterGroupList = [{ layerName: \"County\", dropDownID: \"CNTY\" }, { layerName: \"Major River Basin\", dropDownID: \"MAJRIVBAS\" }, { layerName: \"Hydrologic Unit\", dropDownID: \"HUC8\" }, { layerName: \"Well Use\", dropDownID: \"WELLUSE\" }, { layerName: \"Well Type\", dropDownID: \"WELLCOMPIN\" }, { layerName: \"Congressional District\", dropDownID: \"CONGDIST\" }, { layerName: \"Senate District\", dropDownID: \"SENDIST\" }, { layerName: \"Assembly District\", dropDownID: \"ASSEMDIST\" }, { layerName: \"NY WSC Sub-district\", dropDownID: \"NYWSCDIST\" }];\n\nvar layerList = [{ layerID: \"1\", layerName: \"NY WSC Sub-district\", outFields: [\"subdist\", \"FID\"], dropDownID: \"WSCsubDist\" }, { layerID: \"2\", layerName: \"Senate District\", outFields: [\"NAMELSAD\", \"FID\", \"Rep_Name\"], dropDownID: \"SenateDist\" }, { layerID: \"3\", layerName: \"Assembly District\", outFields: [\"NAMELSAD\", \"FID\", \"AD_Name\"], dropDownID: \"AssemDist\" }, { layerID: \"4\", layerName: \"Congressional District\", outFields: [\"NAMELSAD\", \"FID\", \"CD_Name\"], dropDownID: \"CongDist\" }, { layerID: \"5\", layerName: \"County\", outFields: [\"County_Nam\", \"FID\"], dropDownID: \"County\" }, { layerID: \"6\", layerName: \"Hydrologic Unit\", outFields: [\"HUC_8\", \"FID\", \"HU_8_Name\"], dropDownID: \"HUC8\" }];\n\nvar mapServerDetails = {\n\t\"url\": \"https://www.sciencebase.gov/arcgis/rest/services/Catalog/56ba63bae4b08d617f6490d2/MapServer\",\n\t\"layers\": [1, 2, 3, 4, 5, 6],\n\t\"visible\": false,\n\t\"opacity\": 0.8\n};\n\nvar geojsonMarkerOptions = {\n\tradius: 4,\n\tfillColor: '#ff7800',\n\tcolor: '#000',\n\tweight: 1,\n\topacity: 1,\n\tfillOpacity: 0.8\n};\nvar geoFilterFlag;\nvar parentArray = [];\nvar CSVurl = './data.csv';\nvar CSVdata;\n\ntoastr.options = {\n\t'positionClass': 'toast-bottom-right'\n};\n\nif (true) {\n\t__webpack_require__(14);\n}\n\nvar data = __webpack_require__(11);\n\n//instantiate map\n$(document).ready(function () {\n\tconsole.log('Application Information: ' + \"development\" + ' ' + 'version ' + \"0.0.0\");\n\t$('#appVersion').html('Application Information: ' + \"development\" + ' ' + 'version ' + \"0.0.0\");\n\n\t//create map\n\tmap = L.map('mapDiv', { zoomControl: false });\n\n\tL.Icon.Default.imagePath = './images/';\n\n\t//add zoom control with your options\n\tL.control.zoom({ position: 'topright' }).addTo(map);\n\tL.control.scale().addTo(map);\n\n\t//basemap\n\tlayer = L.tileLayer('https://server.arcgisonline.com/ArcGIS/rest/services/Canvas/World_Light_Gray_Base/MapServer/tile/{z}/{y}/{x}', {\n\t\tattribution: 'Tiles &copy; Esri &mdash; Esri, DeLorme, NAVTEQ',\n\t\tmaxZoom: 16\n\t}).addTo(map);\n\n\t//set initial view\n\tmap.setView([MapY, MapX], 7);\n\n\t//define layers\n\tsitesLayer = L.featureGroup().addTo(map);\n\n\t//create site/location filters, sites loaded from there\n\tcreateGeoFilterGroups(GeoFilterGroupList);\n\n\t//create constituent dropdowns\n\tpopulateConstituentGroupFilters();\n\n\t//add map layers\n\tparseBaseLayers();\n\n\t/*  START EVENT HANDLERS */\n\t$('#mobile-main-menu').click(function () {\n\t\t$('body').toggleClass('isOpenMenu');\n\t});\n\n\t$('.basemapBtn').click(function () {\n\t\t$('.basemapBtn').removeClass('slick-btn-selection');\n\t\t$(this).addClass('slick-btn-selection');\n\t\tvar baseMap = this.id.replace('btn', '');\n\t\tsetBasemap(baseMap);\n\t});\n\n\t$('#loadSites').click(function () {\n\t\tloadSites();\n\t});\n\n\t$('#resetView').click(function () {\n\t\tresetView();\n\t});\n\n\t$('#resetFilters').click(function () {\n\t\tresetFilters();\n\t});\n\n\t$('#aboutButton').click(function () {\n\t\t$('#aboutModal').modal('show');\n\t});\n\n\t$('#showConstituentFilterSelect').click(function () {\n\t\t$('#showConstituentFilterSelect').hide();\n\t\t$('#geoFilterSelect').hide();\n\t\t$('#constituentFilterSelect').show();\n\t});\n\n\t$('#exportGeoJSON').click(function () {\n\t\tdownloadGeoJSON();\n\t});\n\n\t$('#exportKML').click(function () {\n\t\tdownloadKML();\n\t});\n\n\t$('#exportCSV').click(function () {\n\t\tdownloadCSV();\n\t});\n\n\t$('#geoFilterSelect').on('changed.bs.select', function (event, clickedIndex, newValue, oldValue) {\n\n\t\tvar parentSelectID = $(event.target).attr('id');\n\t\tvar parentSelect = parentSelectID.replace('-select', '');\n\t\tvar selectArray = $(event.target).find('option:selected');\n\t\tvar singleSelectCount = selectArray.length;\n\t\tvar currentSelected = $(event.target).find('option')[clickedIndex];\n\t\tvar value = $(currentSelected).attr('value');\n\t\tvar name = $(currentSelected).text();\n\n\t\tif (singleSelectCount === 0) {\n\t\t\tvar index = parentArray.indexOf(parentSelectID);\n\t\t\tif (index > -1) {\n\t\t\t\tparentArray.splice(index, 1);\n\t\t\t}\n\t\t}\n\n\t\t//find how many different selects have options selected\n\t\t$.each($('#geoFilterSelect').find('option:selected'), function (index, value) {\n\t\t\tvar parent = $(value).parent().attr('id');\n\t\t\tif (parentArray.indexOf(parent) === -1) {\n\t\t\t\tparentArray.push(parent);\n\t\t\t}\n\t\t});\n\n\t\t//console.log('here1',selectArray.length,parentArray.length)\n\n\t\t//if operation is a deselect, get remaining selected options\n\t\tif (newValue === false) {\n\n\t\t\tconsole.log('Removing the filter:', parentSelect, value);\n\t\t\tfor (i = 0; i < filterSelections.length; i++) {\n\t\t\t\tif (filterSelections[i].selectName == parentSelect && filterSelections[i].optionValue == value) {\n\t\t\t\t\t//console.log('found something to remove')\n\t\t\t\t\tfilterSelections.splice(i, 1);\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\t//assume new selection\n\t\telse {\n\t\t\t\tvar filterSelect = { selectName: parentSelect, optionValue: value };\n\t\t\t\tfilterSelections.push(filterSelect);\n\t\t\t}\n\n\t\t//if all in a single select are unselected, reset filters\n\t\tif (singleSelectCount === 0 && parentArray.length === 0) {\n\t\t\ttoastr.info('You just unselected all options, resetting filters', 'Info');\n\t\t\tresetView();\n\t\t\treturn;\n\t\t}\n\n\t\t//otherwise do query\n\t\telse {\n\t\t\t\ttoastr.info('Querying sites...', { timeOut: 0 });\n\t\t\t\t//console.log('doing query',filterSelections)\n\n\t\t\t\t//if multiple parent dropdowns in use, assume conditional 'AND' (remove sites from subset)\n\t\t\t\tif (parentArray.length > 1) {\n\t\t\t\t\tloadSites(curGeoJSONlayer.toGeoJSON(), [filterSelect]);\n\t\t\t\t}\n\n\t\t\t\t//otherwise add sites from master, simulating conditional 'OR'\n\t\t\t\telse {\n\t\t\t\t\t\tloadSites(masterGeoJSON, filterSelections);\n\t\t\t\t\t}\n\t\t\t}\n\t});\n\n\t$('#constituentFilterSelect').on('changed.bs.select', function (event, clickedIndex, newValue, oldValue) {\n\t\tconsole.log('here5');\n\t\tvar parentSelectID = $(event.target).attr('id');\n\t\tvar parentSelect = parentSelectID.replace('-select', '');\n\t\tvar value = $(event.target).find('option:selected').attr('value');\n\t\tvar name = $(event.target).find('option:selected').text();\n\t\tvar filterSelect = { selectName: parentSelect, optionValue: value };\n\n\t\tloadSites(curGeoJSONlayer.toGeoJSON(), [filterSelect]);\n\t});\n\n\t//set up click listener for map querying\n\tmap.on('click', function (e) {\n\t\tif (visibleLayers.length > 0) {\n\t\t\tmapServer.identify().on(map).at(e.latlng).layers(\"visible:\" + visibleLayers[0]).run(function (error, featureCollection) {\n\t\t\t\tif (featureCollection.features.length > 0) {\n\t\t\t\t\t$.each(featureCollection.features, function (index, value) {\n\n\t\t\t\t\t\tif (map.hasLayer(identifiedFeature)) map.removeLayer(identifiedFeature);\n\t\t\t\t\t\tidentifiedFeature = L.geoJson(value).addTo(map);\n\n\t\t\t\t\t\t$.each(layerList, function (index, layerInfo) {\n\t\t\t\t\t\t\tvar popupContent = '<h5>' + layerInfo.layerName + '</h5>';\n\n\t\t\t\t\t\t\tif (visibleLayers[0] == layerInfo.layerID) {\n\t\t\t\t\t\t\t\t$.each(value.properties, function (key, field) {\n\t\t\t\t\t\t\t\t\tif (layerInfo.outFields.indexOf(key) != -1) {\n\t\t\t\t\t\t\t\t\t\tif (key != \"FID\") popupContent += '<strong>' + field + '</strong></br>';\n\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t});\n\n\t\t\t\t\t\t\t\tpopup = L.popup().setLatLng(e.latlng).setContent(popupContent).openOn(map);\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t});\n\t\t\t\t\t});\n\t\t\t\t} else {\n\t\t\t\t\t//pane.innerHTML = 'No features identified.';\n\t\t\t\t}\n\t\t\t});\n\t\t}\n\t});\n\n\t//click listener for regular button\n\t$('#baseLayerToggles').on(\"click\", '.layerToggle', function (e) {\n\n\t\tvar layerID = $(this).attr('value');\n\t\tvar divID = $(this).attr('id');\n\n\t\t//clear all check marks\n\t\t$('.mapLayerBtn').removeClass('slick-btn-selection');\n\n\t\t//remove any selection\n\t\tif (map.hasLayer(identifiedFeature)) map.removeLayer(identifiedFeature);\n\n\t\t//layer toggle\n\t\tconsole.log('current visible layers: ', visibleLayers);\n\n\t\t//if layer is already on the map\n\t\tif (visibleLayers == layerID) {\n\t\t\tconsole.log('map already has this layer: ', divID, layerID);\n\t\t\tvisibleLayers = [];\n\t\t\tmap.removeLayer(mapServer);\n\t\t\tconsole.log('current visible layers: ', visibleLayers);\n\t\t} else {\n\t\t\tconsole.log('map DOES NOT have this layer: ', divID, layerID);\n\t\t\t$(this).addClass('slick-btn-selection');\n\t\t\tvisibleLayers = [layerID];\n\t\t\tmapServer.setLayers(visibleLayers);\n\t\t\tmap.addLayer(mapServer);\n\t\t\tconsole.log('current visible layers: ', visibleLayers);\n\t\t}\n\t});\n\n\t/*  END EVENT HANDLERS */\n});\n\nfunction parseBaseLayers() {\n\n\tmapServer = __webpack_provided_L_dot_esri.dynamicMapLayer(mapServerDetails);\n\taddMapLayer(mapServer, mapServerDetails);\n}\n\nfunction addMapLayer(mapServer, mapServerDetails) {\n\n\t$.getJSON(mapServerDetails.url + '/legend?f=json', function (legendResponse) {\n\t\t$.each(legendResponse.layers, function (index, legendValue) {\n\n\t\t\t$.each(layerList, function (index, layerValue) {\n\n\t\t\t\tif (legendValue.layerId == layerValue.layerID) {\n\n\t\t\t\t\t$('#baseLayerToggles').append('<button id=\"' + camelize(layerValue.layerName) + '\" class=\"btn btn-default slick-btn mapLayerBtn equalize layerToggle\" value=\"' + layerValue.layerID + '\"><img alt=\"Legend Swatch\" src=\"data:image/png;base64,' + legendValue.legend[0].imageData + '\" />' + layerValue.layerName + '</button>');\n\t\t\t\t}\n\t\t\t});\n\t\t});\n\t});\n}\n\nfunction populateConstituentGroupFilters() {\n\t$.each(data.constituentGroupList, function (index, item) {\n\n\t\tvar dropDownName = camelize(item.constituentGroup) + \"-select\";\n\t\t$(\"#constituentFilterSelect\").append(\"<select id='\" + dropDownName + \"' class='selectpicker geoFilterSelect' multiple data-selected-text-format='count' data-dropup-auto='false' title='\" + item.constituentGroup + \"'></select>\");\n\n\t\t//console.log(item.constituentGroup)\n\n\t\t$.each(item.pCodes, function (index, pcode) {\n\t\t\tvar val = Object.keys(pcode)[0];\n\t\t\tvar text = pcode[Object.keys(pcode)[0]];\n\t\t\t//console.log(item.constituentGroup ,val,text)\n\n\t\t\taddFilterOption(val, val + ' | ' + text, '#' + dropDownName);\n\t\t});\n\t});\n\n\t//REFRESH\t\n\trefreshAndSortFilters();\n}\n\nfunction refreshAndSortFilters() {\n\n\t//loop over each select dropdown\n\t$('.selectpicker').each(function (index) {\n\t\tvar id = $(this).attr('id');\n\n\t\tvar items = $('#' + id + ' option').get();\n\t\titems.sort(function (a, b) {\n\t\t\tvar keyA = $(a).text();\n\t\t\tvar keyB = $(b).text();\n\n\t\t\tif (keyA < keyB) return -1;\n\t\t\tif (keyA > keyB) return 1;\n\t\t\treturn 0;\n\t\t});\n\t\tvar select = $('#' + id);\n\t\t$.each(items, function (i, option) {\n\t\t\tselect.append(option);\n\t\t});\n\t});\n\n\t//refresh them all\n\t$('.selectpicker').selectpicker('refresh');\n}\n\nfunction setFilter(filterInfo, feature) {\n\n\t//constituent group filters, regex search for Pxxxxx\n\tfor (i = 0; i < filterInfo.length; i++) {\n\t\tvar regex = /^(p|P)([0-9]{5})$/;\n\t\tif (regex.test(filterInfo[i].optionValue)) {\n\t\t\tif (feature.properties[filterInfo[i].optionValue].length > 0) {\n\t\t\t\tconsole.log('match found');\n\t\t\t\treturn true;\n\t\t\t}\n\t\t}\n\n\t\t//geoFilterSelect filters\n\t\telse {\n\n\t\t\t\t//loop over multiple filters if we have them\n\t\t\t\tfor (i = 0; i < filterInfo.length; i++) {\n\t\t\t\t\tif (feature.properties[filterInfo[i].selectName] === filterInfo[i].optionValue) {\n\t\t\t\t\t\t//console.log('match found',feature.properties);\n\t\t\t\t\t\treturn true;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t}\n}\n\nfunction loadSites(inputGeoJSON, filterInfo) {\n\n\tsitesLayer.clearLayers();\n\n\tcurGeoJSONlayer = L.geoJson(inputGeoJSON, {\n\t\t//optional filter input\n\t\tfilter: function (feature, layer) {\n\t\t\t//only drop into this loop if there is a filter selection\n\t\t\tif (filterInfo) {\n\t\t\t\treturn setFilter(filterInfo, feature);\n\t\t\t}\n\n\t\t\t//make sure if there is no filter we pass the site thru\n\t\t\treturn true;\n\t\t},\n\t\tpointToLayer: function (feature, latlng) {\n\t\t\treturn L.circleMarker(latlng, geojsonMarkerOptions);\n\t\t},\n\t\tonEachFeature: function (feature, layer) {\n\t\t\tpopulateGeoFilters(feature);\n\t\t\t//too costly to create popups for all features here\n\t\t}\n\t})\n\n\t//set up popup here, so only instantiated on click\n\t.on('click', function (e) {\n\n\t\t//create popup content\n\t\tvar $popupContent = $('<div>', { id: 'popup' });\n\n\t\t$.each(e.layer.feature.properties, function (index, property) {\n\n\t\t\tif (index.length > 0 && property.length > 0) {\n\t\t\t\t//limit the popup items\n\t\t\t\tif (popupItems.indexOf(index) != -1) {\n\t\t\t\t\t//use lookup to get long name for attribute\n\t\t\t\t\t$.each(data.attributeLookup[0], function (longName, shortName) {\n\t\t\t\t\t\tif (shortName == index) {\n\t\t\t\t\t\t\t$popupContent.append('<b>' + longName + ':</b>  ' + property + '</br>');\n\t\t\t\t\t\t}\n\t\t\t\t\t});\n\t\t\t\t}\n\t\t\t}\n\t\t});\n\n\t\t//open popup at clicked point\n\t\tvar popup = L.popup({ autoPan: false }).setLatLng(e.latlng).setContent($popupContent.html()).openOn(map);\n\t});\n\n\tvar siteCount = curGeoJSONlayer.getLayers().length;\n\t$('#siteCount').text(siteCount + ' sites');\n\n\tif (siteCount > 0) {\n\n\t\t//add to map\n\t\tsitesLayer.addLayer(curGeoJSONlayer);\n\n\t\t//zoom to select\n\t\tmap.fitBounds(sitesLayer.getBounds());\n\t} else {\n\t\ttoastr.error('Error', 'No sites found, please check your filter selections', { timeOut: 20000 });\n\n\t\t//resetView();\n\t}\n}\n\nfunction loadCSV(url) {\n\ttoastr.info('Drawing GeoJSON...', { timeOut: 0 });\n\t$.ajax({\n\t\ttype: \"GET\",\n\t\turl: url,\n\t\tdataType: \"text\",\n\t\tasync: false,\n\t\tsuccess: function (data) {\n\t\t\tcsv2geojson.csv2geojson(data, function (err, data) {\n\t\t\t\tmasterGeoJSON = data;\n\t\t\t\tloadSites(masterGeoJSON, null);\n\t\t\t});\n\t\t}\n\t});\n}\n\nfunction populateGeoFilters(feature) {\n\n\t//add to select dropdown\n\t$.each(GeoFilterGroupList, function (index, filter) {\n\n\t\t//populate the dropdowns\n\t\tvar elementName = '#' + filter.dropDownID + '-select';\n\n\t\t//add filterOption\n\t\taddFilterOption(feature.properties[filter.dropDownID], feature.properties[filter.dropDownID], elementName);\n\t});\n}\n\nfunction addFilterOption(code, text, elementName) {\n\t//add it if it doesn't exist\n\tif (code && code !== 'na' && $(elementName + ' option[value=\"' + code + '\"]').length == 0) {\n\t\t//console.log('adding an option for:',elementName,code)\n\t\t$(elementName).append($('<option></option>').attr('value', code).text(text));\n\t}\n}\n\nfunction createGeoFilterGroups(list) {\n\t$.each(list, function (index, filter) {\n\n\t\t//create dropdown menus\n\t\t$(\"#geoFilterSelect\").append(\"<select id='\" + filter.dropDownID + \"-select' class='selectpicker geoFilterSelect' multiple data-selected-text-format='count' data-dropup-auto='false' title='\" + filter.layerName + \"'></select>\");\n\t});\n\n\tloadCSV(CSVurl);\n}\n\nfunction downloadGeoJSON() {\n\n\t//for some reason the leaflet toGeoJSON wraps the geojson in a second feature collection\n\tif (sitesLayer.toGeoJSON().features[0]) {\n\t\tvar GeoJSON = JSON.stringify(sitesLayer.toGeoJSON().features[0]);\n\t\tvar filename = 'data.geojson';\n\t\tdownloadFile(GeoJSON, filename);\n\t} else {\n\t\ttoastr.error('Error', 'No sites to export', { timeOut: 0 });\n\t}\n}\n\nfunction downloadKML() {\n\t//https://github.com/mapbox/tokml\n\t//https://gis.stackexchange.com/questions/159344/export-to-kml-option-using-leaflet\n\tvar geojson = sitesLayer.toGeoJSON();\n\n\tif (geojson.features[0]) {\n\t\tvar GeoJSON = geojson.features[0];\n\t\tvar kml = tokml(GeoJSON);\n\t\tvar filename = 'data.kml';\n\t\tdownloadFile(kml, filename);\n\t} else {\n\t\ttoastr.error('Error', 'No sites to export', { timeOut: 0 });\n\t}\n}\n\nfunction downloadCSV() {\n\tvar geojson = sitesLayer.toGeoJSON().features[0];\n\n\tif (geojson) {\n\t\t//get headers\n\t\tvar attributeNames = Object.keys(geojson.features[0].properties);\n\n\t\t// write csv file\n\t\tvar csvData = [];\n\t\tcsvData.push(attributeNames.join(','));\n\n\t\tgeojson.features.forEach(function (feature) {\n\t\t\tvar attributes = [];\n\t\t\tattributeNames.forEach(function (name) {\n\t\t\t\tattributes.push(feature.properties[name].toString());\n\t\t\t});\n\t\t\tcsvData.push(attributes);\n\t\t});\n\n\t\tcsvData = csvData.join('\\n');\n\n\t\tvar filename = 'data.csv';\n\t\tdownloadFile(csvData, filename);\n\t} else {\n\t\ttoastr.error('Error', 'No sites to export', { timeOut: 0 });\n\t}\n}\n\nfunction downloadFile(data, filename) {\n\tvar blob = new Blob([data], { type: 'text/csv;charset=utf-8;' });\n\tif (navigator.msSaveBlob) {\n\t\t// IE 10+\n\t\tnavigator.msSaveBlob(blob, filename);\n\t} else {\n\t\tvar link = document.createElement('a');\n\t\tvar url = URL.createObjectURL(blob);\n\t\tif (link.download !== undefined) {\n\t\t\t// feature detection\n\t\t\t// Browsers that support HTML5 download attribute\n\t\t\tlink.setAttribute('href', url);\n\t\t\tlink.setAttribute('download', filename);\n\t\t\tlink.style.visibility = 'hidden';\n\t\t\tdocument.body.appendChild(link);\n\t\t\tlink.click();\n\t\t\tdocument.body.removeChild(link);\n\t\t} else {\n\t\t\twindow.open(url);\n\t\t}\n\t}\n}\n\nfunction setBasemap(baseMap) {\n\n\tswitch (baseMap) {\n\t\tcase 'Streets':\n\t\t\tbaseMap = 'Streets';break;\n\t\tcase 'Satellite':\n\t\t\tbaseMap = 'Imagery';break;\n\t\tcase 'Topo':\n\t\t\tbaseMap = 'Topographic';break;\n\t\tcase 'Terrain':\n\t\t\tbaseMap = 'Terrain';break;\n\t\tcase 'Gray':\n\t\t\tbaseMap = 'Gray';break;\n\t\tcase 'NatGeo':\n\t\t\tbaseMap = 'NationalGeographic';break;\n\t}\n\n\tif (baseMapLayer) map.removeLayer(baseMapLayer);\n\tbaseMapLayer = __webpack_provided_L_dot_esri.basemapLayer(baseMap);\n\tmap.addLayer(baseMapLayer);\n\tif (basemapLayerLabels) map.removeLayer(basemapLayerLabels);\n\tif (baseMap === 'Gray' || baseMap === 'Imagery' || baseMap === 'Terrain') {\n\t\tbasemapLayerLabels = __webpack_provided_L_dot_esri.basemapLayer(baseMap + 'Labels');\n\t\tmap.addLayer(basemapLayerLabels);\n\t}\n}\n\nfunction resetFilters() {\n\t$('.selectpicker').selectpicker('deselectAll');\n\n\tparentArray = [];\n\tfilterSelections = [];\n}\n\nfunction resetView() {\n\n\t$('#showConstituentFilterSelect').show();\n\t$('#geoFilterSelect').show();\n\t$('#constituentFilterSelect').hide();\n\n\t//clear any selection graphics\n\tloadSites(masterGeoJSON, null);\n\n\t//reset filters\n\tresetFilters();\n\n\t//reset view\n\tmap.setView([MapY, MapX], 7);\n}\n\nfunction camelize(str) {\n\treturn str.replace(/(?:^\\w|[A-Z]|\\b\\w)/g, function (letter, index) {\n\t\treturn index == 0 ? letter.toLowerCase() : letter.toUpperCase();\n\t}).replace(/\\s+/g, '');\n}\n/* WEBPACK VAR INJECTION */}.call(exports, __webpack_require__(5), __webpack_require__(0), __webpack_require__(4), __webpack_require__(3), __webpack_require__(6)))//# sourceMappingURL=data:application/json;charset=utf-8;base64,");

/***/ })

},[20]);